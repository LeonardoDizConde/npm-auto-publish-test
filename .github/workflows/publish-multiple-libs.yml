name: Publish NPM

on: workflow_dispatch

env:
  NODE_VERSION: 16.x

jobs:
  publish:
    name: publish
    runs-on: ubuntu-latest
    environment: development
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: install rush
        run: npm install -g @microsoft/rush
      - name: Install dependencies
        run: rush update
      - name: rush Build
        run: rush rebuild
      - name: Publishing mono repo 1
        uses: JS-DevTools/npm-publish@v2
        id: publish_mono
        with:
          token: ${{ secrets.NPM_TOKEN }}
          package: ./packages/npm-auto-publish-test-mono-repo-1
      - name: Publishing mono repo 2
        uses: JS-DevTools/npm-publish@v2
        id: publish_mono_type
        with:
          token: ${{ secrets.NPM_TOKEN }}
          package: ./packages/npm-auto-publish-test-mono-repo-2
      - name: Set output vars
        run: |
          if [!steps.publish_mono.outputs.value] && [!steps.publish_mono_type.outputs.value]; then
            title="NPM release error"
            echo "::error title=$title::Both packages failed to publish. Did you changed package.json version? Please review and try again."
            exit 1
          elif [[ !steps.publish_mono.outputs.value ]]; then
            title="No changes has been detected"
            echo "::error title=$title::Did you changed package.json version?"
            title="A new release was made in app-b"
            echo "::warning title=$title::The new version ${{ steps.publish_mono_type.outputs.version }} was published"
          elif [[ !steps.publish_mono_type.outputs.value ]]; then
            title="No changes has been detected"
            echo "::error title=$title::Did you changed package.json version?"
            title="A new release was made in app-a"
            echo "::warning title=$title::The new version ${{ steps.publish_mono.outputs.version }} was published"
          else
            echo "::warning title=${"A new release was made in app-a"}::The new version ${{ steps.publish_mono.outputs.version }} was published"
            echo "::warning title=${"A new release was made in app-b"}::The new version ${{ steps.publish_mono_type.outputs.version }} was published"
          fi
          exit 0
